name: RDP via Cloudflare Tunnel
on:
  workflow_dispatch:

jobs:
  rdp:
    runs-on: windows-latest
    timeout-minutes: 360

    steps:
      - name: Enable RDP & Firewall
        run: |
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0 -Force
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
          Restart-Service -Name TermService -Force
          Write-Host "‚úÖ RDP enabled successfully."

      - name: Create RDP User
        run: |
          $password = "admin@123"
          $securePass = ConvertTo-SecureString $password -AsPlainText -Force
          if (-not (Get-LocalUser -Name "TOOLBOXLAP" -ErrorAction SilentlyContinue)) {
              New-LocalUser -Name "TOOLBOXLAP" -Password $securePass -AccountNeverExpires
          }
          Add-LocalGroupMember -Group "Administrators" -Member "TOOLBOXLAP"
          Add-LocalGroupMember -Group "Remote Desktop Users" -Member "TOOLBOXLAP"
          Write-Host "‚úÖ User TOOLBOXLAP created with password admin@123."

      - name: Install Cloudflared
        run: |
          Invoke-WebRequest -Uri "https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-windows-amd64.exe" -OutFile "$env:ProgramFiles\cloudflared.exe"
          Write-Host "‚úÖ Cloudflared installed successfully."

      - name: Start Cloudflare Tunnel (from Secret)
        env:
          TUNNEL_ID: b3ac50fc-16ee-4391-9186-e8559de41982
          TUNNEL_TOKEN: ${{ secrets.CLOUDFLARE_TUNNEL_TOKEN }}
        run: |
          Write-Host "üöÄ Installing Cloudflare Tunnel service..."
          & "$env:ProgramFiles\cloudflared.exe" service install $env:TUNNEL_TOKEN
          Start-Sleep -Seconds 5

          Write-Host "üîÑ Starting tunnel..."
          Start-Process "$env:ProgramFiles\cloudflared.exe" -ArgumentList "tunnel","run",$env:TUNNEL_ID -NoNewWindow
          Start-Sleep -Seconds 10

          Write-Host "‚úÖ Cloudflare tunnel started successfully!"

      - name: Verify RDP Port
        run: |
          $check = Test-NetConnection -ComputerName "localhost" -Port 3389
          if (-not $check.TcpTestSucceeded) {
            Write-Error "‚ùå RDP not listening on port 3389"
            exit 1
          }
          Write-Host "‚úÖ RDP port 3389 is open and ready."

      - name: Display Info and Keep Alive
        run: |
          Write-Host ""
          Write-Host "==========================================="
          Write-Host "‚úÖ RDP ACCESS READY"
          Write-Host "üåê Address: rdp1.qzz.io"
          Write-Host "üë§ Username: TOOLBOXLAP"
          Write-Host "üîë Password: admin@123"
          Write-Host "==========================================="
          Write-Host "‚ö†Ô∏è  Leave this workflow running to keep RDP alive."
          Write-Host "   Stop the job from GitHub Actions to disconnect."
          Write-Host "-------------------------------------------"
          while ($true) {
            Write-Host "[$(Get-Date)] RDP session active..."
            Start-Sleep -Seconds 300
          }
